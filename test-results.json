{"numTotalTestSuites":62,"numPassedTestSuites":43,"numFailedTestSuites":19,"numPendingTestSuites":0,"numTotalTests":122,"numPassedTests":97,"numFailedTests":20,"numPendingTests":5,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751453640432,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Control Flow Tests","IF-THEN-ELSE Statements"],"fullName":"Control Flow Tests IF-THEN-ELSE Statements should convert simple IF statement","status":"passed","title":"should convert simple IF statement","duration":12.077541999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","IF-THEN-ELSE Statements"],"fullName":"Control Flow Tests IF-THEN-ELSE Statements should convert IF-ELSE statement","status":"passed","title":"should convert IF-ELSE statement","duration":1.3555829999997968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","IF-THEN-ELSE Statements"],"fullName":"Control Flow Tests IF-THEN-ELSE Statements should convert IF-ELIF-ELSE statement (ELSE IF in Pseudocode)","status":"passed","title":"should convert IF-ELIF-ELSE statement (ELSE IF in Pseudocode)","duration":13.824166999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","IF-THEN-ELSE Statements"],"fullName":"Control Flow Tests IF-THEN-ELSE Statements should handle nested IF statements","status":"passed","title":"should handle nested IF statements","duration":3.21287499999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","FOR Loops"],"fullName":"Control Flow Tests FOR Loops should convert for loop with range (0 to N-1)","status":"passed","title":"should convert for loop with range (0 to N-1)","duration":1.686083999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","FOR Loops"],"fullName":"Control Flow Tests FOR Loops should convert for loop with range (start to end-1)","status":"passed","title":"should convert for loop with range (start to end-1)","duration":0.8725839999999607,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","FOR Loops"],"fullName":"Control Flow Tests FOR Loops should convert for loop with range and step","status":"passed","title":"should convert for loop with range and step","duration":0.5454999999999472,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","FOR Loops"],"fullName":"Control Flow Tests FOR Loops should convert for loop with negative step","status":"passed","title":"should convert for loop with negative step","duration":0.60550000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","WHILE Loops"],"fullName":"Control Flow Tests WHILE Loops should convert simple while loop","status":"passed","title":"should convert simple while loop","duration":1.495290999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","WHILE Loops"],"fullName":"Control Flow Tests WHILE Loops should handle while loop with break (translates to conditional exit or complex logic)","status":"passed","title":"should handle while loop with break (translates to conditional exit or complex logic)","duration":1.5443330000000515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","REPEAT-UNTIL Loops"],"fullName":"Control Flow Tests REPEAT-UNTIL Loops should convert a while True loop with a break at the end, recognized as REPEAT-UNTIL","status":"passed","title":"should convert a while True loop with a break at the end, recognized as REPEAT-UNTIL","duration":1.0015419999999722,"failureMessages":[],"meta":{}},{"ancestorTitles":["Control Flow Tests","Nested Control Structures"],"fullName":"Control Flow Tests Nested Control Structures should handle nested FOR and IF","status":"passed","title":"should handle nested FOR and IF","duration":0.7120830000001206,"failureMessages":[],"meta":{}}],"startTime":1751453642616,"endTime":1751453642655.7122,"status":"passed","message":"","name":"/Users/wao_singapore/python2igsce/tests/controlflow.test.ts"},{"assertionResults":[{"ancestorTitles":["Data Structures Tests","ARRAY Tests"],"fullName":"Data Structures Tests ARRAY Tests should convert array declaration from Python list (inferring type and size)","status":"passed","title":"should convert array declaration from Python list (inferring type and size)","duration":12.722208000000137,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Structures Tests","ARRAY Tests"],"fullName":"Data Structures Tests ARRAY Tests should convert array declaration for an empty list (requires type annotation or default)","status":"passed","title":"should convert array declaration for an empty list (requires type annotation or default)","duration":4.926417000000129,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Structures Tests","ARRAY Tests"],"fullName":"Data Structures Tests ARRAY Tests should convert array element access (0-indexed Python to 1-indexed Pseudocode)","status":"passed","title":"should convert array element access (0-indexed Python to 1-indexed Pseudocode)","duration":1.5687089999998989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Structures Tests","ARRAY Tests"],"fullName":"Data Structures Tests ARRAY Tests should convert array element assignment","status":"passed","title":"should convert array element assignment","duration":2.4412079999999605,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Structures Tests","ARRAY Tests"],"fullName":"Data Structures Tests ARRAY Tests should handle iterating through an array (e.g., using FOR loop)","status":"failed","title":"should handle iterating through an array (e.g., using FOR loop)","duration":13.228417000000036,"failureMessages":["AssertionError: expected 'DECLARE scores : ARRAY[1:3] OF INTEGE…' to contain 'OUTPUT scores[i]'\n    at /Users/wao_singapore/python2igsce/tests/datastructures.test.ts:87:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Data Structures Tests","RECORD (TYPE) Tests"],"fullName":"Data Structures Tests RECORD (TYPE) Tests should convert Python class (used as record/struct) to TYPE definition","status":"failed","title":"should convert Python class (used as record/struct) to TYPE definition","duration":41.649541,"failureMessages":["AssertionError: expected 'TYPE StudentRecord\\n   DECLARE name :…' to contain 'TYPE StudentRecord\\n  DECLARE name : …'\n    at /Users/wao_singapore/python2igsce/tests/datastructures.test.ts:112:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Data Structures Tests","RECORD (TYPE) Tests"],"fullName":"Data Structures Tests RECORD (TYPE) Tests should handle record field access","status":"passed","title":"should handle record field access","duration":20.526665999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Structures Tests","RECORD (TYPE) Tests"],"fullName":"Data Structures Tests RECORD (TYPE) Tests should handle record field assignment","status":"passed","title":"should handle record field assignment","duration":30.713250000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Structures Tests","RECORD (TYPE) Tests"],"fullName":"Data Structures Tests RECORD (TYPE) Tests should handle arrays of records","status":"failed","title":"should handle arrays of records","duration":9.138915999999881,"failureMessages":["AssertionError: expected 'TYPE PointRecord\\n   DECLARE name : S…' to contain 'TYPE PointRecord\\n  DECLARE x : INTEG…'\n    at /Users/wao_singapore/python2igsce/tests/datastructures.test.ts:194:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}}],"startTime":1751453642617,"endTime":1751453642756.139,"status":"failed","message":"","name":"/Users/wao_singapore/python2igsce/tests/datastructures.test.ts"},{"assertionResults":[{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Variables and Assignment"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Variables and Assignment should convert variable assignment","status":"passed","title":"should convert variable assignment","duration":9.872875000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Variables and Assignment"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Variables and Assignment should convert input statements","status":"failed","title":"should convert input statements","duration":34.37024999999994,"failureMessages":["AssertionError: expected 'OUTPUT \"Enter your name: \" INPUT name…' to be 'OUTPUT \"Enter your name: \"\\nINPUT nam…' // Object.is equality\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:38:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Variables and Assignment"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Variables and Assignment should convert output statements","status":"failed","title":"should convert output statements","duration":5.119292000000087,"failureMessages":["AssertionError: expected 'OUTPUT \"Hello World\"\\nOUTPUT \"Your sc…' to be 'OUTPUT \"Hello World\"\\nOUTPUT \"Your sc…' // Object.is equality\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:52:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Iteration Structures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Iteration Structures should convert FOR loop with range","status":"passed","title":"should convert FOR loop with range","duration":1.9439579999998386,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Iteration Structures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Iteration Structures should convert FOR loop with step","status":"passed","title":"should convert FOR loop with step","duration":0.7502920000001723,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Iteration Structures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Iteration Structures should convert WHILE loop","status":"failed","title":"should convert WHILE loop","duration":3.8350419999999303,"failureMessages":["AssertionError: expected 'WHILE x < 10 DO\\n  x ← x + 1\\n  OUTPU…' to be 'WHILE x < 10\\n  x ← x + 1\\n  OUTPUT x…' // Object.is equality\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:95:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Iteration Structures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Iteration Structures should convert do-while equivalent (while True with break)","status":"failed","title":"should convert do-while equivalent (while True with break)","duration":3.541874999999891,"failureMessages":["AssertionError: expected 'WHILE True DO\\n  OUTPUT \"Enter guess:…' to be 'REPEAT\\n  OUTPUT \"Enter guess: \"\\n  I…' // Object.is equality\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:111:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Selection Structures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Selection Structures should convert simple IF-ELSE","status":"passed","title":"should convert simple IF-ELSE","duration":1.032207999999855,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Selection Structures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Selection Structures should convert nested IF statements","status":"passed","title":"should convert nested IF statements","duration":1.6880840000001172,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Selection Structures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Selection Structures should convert IF-ELIF-ELSE chain","status":"passed","title":"should convert IF-ELIF-ELSE chain","duration":0.9922079999998914,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Arrays and Lists"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Arrays and Lists should convert array declaration and access","status":"passed","title":"should convert array declaration and access","duration":1.1865419999999176,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Arrays and Lists"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Arrays and Lists should convert list operations","status":"failed","title":"should convert list operations","duration":94.37362499999995,"failureMessages":["AssertionError: expected 'DECLARE names : ARRAY[1:0] OF STRING\\…' to be 'DECLARE names : ARRAY[1:100] OF STRIN…' // Object.is equality\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:216:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Functions and Procedures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Functions and Procedures should convert procedure (function without return)","status":"passed","title":"should convert procedure (function without return)","duration":11.886707999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Functions and Procedures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Functions and Procedures should convert function with return value","status":"failed","title":"should convert function with return value","duration":5.93079200000011,"failureMessages":["AssertionError: expected 'FUNCTION Add(x : STRING, y : STRING) …' to be 'FUNCTION Add(x : STRING, y : STRING) …' // Object.is equality\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:252:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Functions and Procedures"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Functions and Procedures should convert function with multiple parameters","status":"passed","title":"should convert function with multiple parameters","duration":2.076957999999877,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Operators and Expressions"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Operators and Expressions should convert comparison operators","status":"failed","title":"should convert comparison operators","duration":7.138250000000198,"failureMessages":["AssertionError: expected 'IF x = y THEN\\n  OUTPUT \"Equal\"\\nENDI…' to be 'IF x = y THEN\\n  OUTPUT \"Equal\"\\nENDI…' // Object.is equality\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:300:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Operators and Expressions"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Operators and Expressions should convert logical operators","status":"passed","title":"should convert logical operators","duration":0.9144169999999576,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Operators and Expressions"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Operators and Expressions should convert arithmetic operators","status":"passed","title":"should convert arithmetic operators","duration":0.5264580000000478,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","String Operations"],"fullName":"E2E Tests - Python to IGCSE Pseudocode String Operations should convert string concatenation","status":"failed","title":"should convert string concatenation","duration":0.9919589999999516,"failureMessages":["AssertionError: expected 'full_name ← first_name & \" \" & last_n…' to be 'full_name ← first_name & \" \" & last_n…' // Object.is equality\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:353:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","String Operations"],"fullName":"E2E Tests - Python to IGCSE Pseudocode String Operations should convert string methods","status":"failed","title":"should convert string methods","duration":1.2211249999998017,"failureMessages":["AssertionError: expected 'text ← \"Hello World\"\\nlength ← LENGTH…' to be 'text ← \"Hello World\"\\nlength ← LENGTH…' // Object.is equality\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:369:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Comments"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Comments should convert single line comments","status":"passed","title":"should convert single line comments","duration":0.3576250000000982,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Complex Examples"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Complex Examples should convert a complete program with multiple constructs","status":"failed","title":"should convert a complete program with multiple constructs","duration":5.002958000000035,"failureMessages":["AssertionError: expected '// Simple calculator program\\nFUNCTIO…' to contain 'WHILE TRUE'\n    at /Users/wao_singapore/python2igsce/tests/e2e.test.ts:451:22\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Complex Examples"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Complex Examples should convert array processing example","status":"passed","title":"should convert array processing example","duration":13.21508300000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Array Declarations"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Array Declarations should convert array initialization","status":"skipped","title":"should convert array initialization","failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Array Declarations"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Array Declarations should convert array access and assignment","status":"skipped","title":"should convert array access and assignment","failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","Type Declarations"],"fullName":"E2E Tests - Python to IGCSE Pseudocode Type Declarations should convert typed variable declarations","status":"skipped","title":"should convert typed variable declarations","failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","CASE Statements"],"fullName":"E2E Tests - Python to IGCSE Pseudocode CASE Statements should convert match statement to CASE","status":"skipped","title":"should convert match statement to CASE","failureMessages":[],"meta":{}},{"ancestorTitles":["E2E Tests - Python to IGCSE Pseudocode","CASE Statements"],"fullName":"E2E Tests - Python to IGCSE Pseudocode CASE Statements should convert if-elif-else to CASE when appropriate","status":"skipped","title":"should convert if-elif-else to CASE when appropriate","failureMessages":[],"meta":{}}],"startTime":1751453642630,"endTime":1751453642842.215,"status":"failed","message":"","name":"/Users/wao_singapore/python2igsce/tests/e2e.test.ts"},{"assertionResults":[{"ancestorTitles":["Functions and Procedures Tests","PROCEDURE Definitions and Calls"],"fullName":"Functions and Procedures Tests PROCEDURE Definitions and Calls should convert a simple procedure definition","status":"passed","title":"should convert a simple procedure definition","duration":14.053916000000072,"failureMessages":[],"meta":{}},{"ancestorTitles":["Functions and Procedures Tests","PROCEDURE Definitions and Calls"],"fullName":"Functions and Procedures Tests PROCEDURE Definitions and Calls should convert a procedure definition with multiple parameters","status":"passed","title":"should convert a procedure definition with multiple parameters","duration":3.8775000000000546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Functions and Procedures Tests","PROCEDURE Definitions and Calls"],"fullName":"Functions and Procedures Tests PROCEDURE Definitions and Calls should convert a procedure call","status":"passed","title":"should convert a procedure call","duration":0.9085000000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Functions and Procedures Tests","FUNCTION Definitions and Calls"],"fullName":"Functions and Procedures Tests FUNCTION Definitions and Calls should convert a simple function definition with a return value","status":"passed","title":"should convert a simple function definition with a return value","duration":3.2795830000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Functions and Procedures Tests","FUNCTION Definitions and Calls"],"fullName":"Functions and Procedures Tests FUNCTION Definitions and Calls should convert a function with explicit Python type hints for return type","status":"passed","title":"should convert a function with explicit Python type hints for return type","duration":2.3255830000000515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Functions and Procedures Tests","FUNCTION Definitions and Calls"],"fullName":"Functions and Procedures Tests FUNCTION Definitions and Calls should convert a function call assigned to a variable","status":"passed","title":"should convert a function call assigned to a variable","duration":1.2669579999999314,"failureMessages":[],"meta":{}},{"ancestorTitles":["Functions and Procedures Tests","FUNCTION Definitions and Calls"],"fullName":"Functions and Procedures Tests FUNCTION Definitions and Calls should handle RETURN statements correctly","status":"passed","title":"should handle RETURN statements correctly","duration":1.6049169999998867,"failureMessages":[],"meta":{}},{"ancestorTitles":["Functions and Procedures Tests","Parameter Passing"],"fullName":"Functions and Procedures Tests Parameter Passing should handle parameters passed by value (default)","status":"passed","title":"should handle parameters passed by value (default)","duration":1.7212499999998272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Functions and Procedures Tests","Parameter Passing"],"fullName":"Functions and Procedures Tests Parameter Passing should handle parameters intended as BYREF (if a convention is established)","status":"passed","title":"should handle parameters intended as BYREF (if a convention is established)","duration":4.861083999999892,"failureMessages":[],"meta":{}},{"ancestorTitles":["Functions and Procedures Tests","Recursive Functions"],"fullName":"Functions and Procedures Tests Recursive Functions should convert a recursive factorial function","status":"passed","title":"should convert a recursive factorial function","duration":1.9845000000000255,"failureMessages":[],"meta":{}}],"startTime":1751453642620,"endTime":1751453642655.9846,"status":"passed","message":"","name":"/Users/wao_singapore/python2igsce/tests/functions.test.ts"},{"assertionResults":[{"ancestorTitles":["Python to IGCSE Pseudocode Integration Tests","Basic Programs"],"fullName":"Python to IGCSE Pseudocode Integration Tests Basic Programs should convert simple calculator program","status":"passed","title":"should convert simple calculator program","duration":21.109624999999824,"failureMessages":[],"meta":{}},{"ancestorTitles":["Python to IGCSE Pseudocode Integration Tests","Basic Programs"],"fullName":"Python to IGCSE Pseudocode Integration Tests Basic Programs should convert simple assignment","status":"passed","title":"should convert simple assignment","duration":5.015250000000151,"failureMessages":[],"meta":{}},{"ancestorTitles":["Python to IGCSE Pseudocode Integration Tests","Basic Programs"],"fullName":"Python to IGCSE Pseudocode Integration Tests Basic Programs should convert simple if statement","status":"passed","title":"should convert simple if statement","duration":2.186292000000094,"failureMessages":[],"meta":{}},{"ancestorTitles":["Python to IGCSE Pseudocode Integration Tests","Basic Programs"],"fullName":"Python to IGCSE Pseudocode Integration Tests Basic Programs should convert simple arithmetic","status":"passed","title":"should convert simple arithmetic","duration":1.8524160000001757,"failureMessages":[],"meta":{}},{"ancestorTitles":["Python to IGCSE Pseudocode Integration Tests","Basic Programs"],"fullName":"Python to IGCSE Pseudocode Integration Tests Basic Programs should convert simple function","status":"passed","title":"should convert simple function","duration":2.3976249999998345,"failureMessages":[],"meta":{}},{"ancestorTitles":["Python to IGCSE Pseudocode Integration Tests","Basic Programs"],"fullName":"Python to IGCSE Pseudocode Integration Tests Basic Programs should convert simple loop","status":"passed","title":"should convert simple loop","duration":1.6268330000000333,"failureMessages":[],"meta":{}},{"ancestorTitles":["Python to IGCSE Pseudocode Integration Tests","Basic Programs"],"fullName":"Python to IGCSE Pseudocode Integration Tests Basic Programs should convert simple while loop","status":"passed","title":"should convert simple while loop","duration":1.2512500000000273,"failureMessages":[],"meta":{}},{"ancestorTitles":["Python to IGCSE Pseudocode Integration Tests","Basic Programs"],"fullName":"Python to IGCSE Pseudocode Integration Tests Basic Programs should convert simple list","status":"passed","title":"should convert simple list","duration":0.9814579999999751,"failureMessages":[],"meta":{}},{"ancestorTitles":["Python to IGCSE Pseudocode Integration Tests","Basic Programs"],"fullName":"Python to IGCSE Pseudocode Integration Tests Basic Programs should convert string operations","status":"passed","title":"should convert string operations","duration":13.04079200000001,"failureMessages":[],"meta":{}}],"startTime":1751453642614,"endTime":1751453642664.0408,"status":"passed","message":"","name":"/Users/wao_singapore/python2igsce/tests/integration.test.ts"},{"assertionResults":[{"ancestorTitles":["IGCSE Pseudocode IR Types","Basic IR Structure"],"fullName":"IGCSE Pseudocode IR Types Basic IR Structure should create IR node with required properties","status":"passed","title":"should create IR node with required properties","duration":2.771874999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","Basic IR Structure"],"fullName":"IGCSE Pseudocode IR Types Basic IR Structure should support nested IR structures","status":"passed","title":"should support nested IR structures","duration":0.645917000000054,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","Basic IR Structure"],"fullName":"IGCSE Pseudocode IR Types Basic IR Structure should handle IR node metadata","status":"passed","title":"should handle IR node metadata","duration":0.34704099999999016,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","IGCSE Pseudocode Syntax"],"fullName":"IGCSE Pseudocode IR Types IGCSE Pseudocode Syntax should handle assignment with ← operator","status":"passed","title":"should handle assignment with ← operator","duration":0.3667919999999185,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","IGCSE Pseudocode Syntax"],"fullName":"IGCSE Pseudocode IR Types IGCSE Pseudocode Syntax should handle FOR loop with TO keyword","status":"passed","title":"should handle FOR loop with TO keyword","duration":0.3249580000000378,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","IGCSE Pseudocode Syntax"],"fullName":"IGCSE Pseudocode IR Types IGCSE Pseudocode Syntax should handle WHILE loop structure","status":"passed","title":"should handle WHILE loop structure","duration":0.45041700000001583,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","IGCSE Pseudocode Syntax"],"fullName":"IGCSE Pseudocode IR Types IGCSE Pseudocode Syntax should handle PROCEDURE definition","status":"passed","title":"should handle PROCEDURE definition","duration":0.3322920000000522,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","IGCSE Pseudocode Syntax"],"fullName":"IGCSE Pseudocode IR Types IGCSE Pseudocode Syntax should handle FUNCTION definition","status":"passed","title":"should handle FUNCTION definition","duration":0.21970899999996618,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","IGCSE Pseudocode Syntax"],"fullName":"IGCSE Pseudocode IR Types IGCSE Pseudocode Syntax should handle ARRAY declaration","status":"passed","title":"should handle ARRAY declaration","duration":0.40412500000002183,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","IGCSE Pseudocode Syntax"],"fullName":"IGCSE Pseudocode IR Types IGCSE Pseudocode Syntax should handle TYPE definition","status":"passed","title":"should handle TYPE definition","duration":1.8204579999999169,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","IGCSE Pseudocode Syntax"],"fullName":"IGCSE Pseudocode IR Types IGCSE Pseudocode Syntax should handle CASE structure","status":"passed","title":"should handle CASE structure","duration":0.49070900000003803,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","Visitor Integration"],"fullName":"IGCSE Pseudocode IR Types Visitor Integration should create IR nodes through visitor","status":"passed","title":"should create IR nodes through visitor","duration":0.5557919999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["IGCSE Pseudocode IR Types","Visitor Integration"],"fullName":"IGCSE Pseudocode IR Types Visitor Integration should handle complex IR structures","status":"passed","title":"should handle complex IR structures","duration":0.7174999999999727,"failureMessages":[],"meta":{}}],"startTime":1751453643251,"endTime":1751453643260.7175,"status":"passed","message":"","name":"/Users/wao_singapore/python2igsce/tests/ir.test.ts"},{"assertionResults":[{"ancestorTitles":["Nested Structures Comprehensive Tests","Deep Nesting Tests"],"fullName":"Nested Structures Comprehensive Tests Deep Nesting Tests should handle simple nested IF statements","status":"passed","title":"should handle simple nested IF statements","duration":11.59787499999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Nested Structures Comprehensive Tests","Deep Nesting Tests"],"fullName":"Nested Structures Comprehensive Tests Deep Nesting Tests should handle nested FOR loops","status":"passed","title":"should handle nested FOR loops","duration":4.582208000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["Nested Structures Comprehensive Tests","Deep Nesting Tests"],"fullName":"Nested Structures Comprehensive Tests Deep Nesting Tests should handle FOR with nested IF","status":"passed","title":"should handle FOR with nested IF","duration":1.1916670000000522,"failureMessages":[],"meta":{}},{"ancestorTitles":["Nested Structures Comprehensive Tests","Deep Nesting Tests"],"fullName":"Nested Structures Comprehensive Tests Deep Nesting Tests should handle nested WHILE loops","status":"passed","title":"should handle nested WHILE loops","duration":2.402832999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Nested Structures Comprehensive Tests","Deep Nesting Tests"],"fullName":"Nested Structures Comprehensive Tests Deep Nesting Tests should handle deeply nested IF statements","status":"passed","title":"should handle deeply nested IF statements","duration":0.8927499999999782,"failureMessages":[],"meta":{}},{"ancestorTitles":["Nested Structures Comprehensive Tests","Deep Nesting Tests"],"fullName":"Nested Structures Comprehensive Tests Deep Nesting Tests should calculate correct IR depth for nested structures","status":"passed","title":"should calculate correct IR depth for nested structures","duration":0.9140840000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Nested Structures Comprehensive Tests","Deep Nesting Tests"],"fullName":"Nested Structures Comprehensive Tests Deep Nesting Tests should count IR nodes correctly in nested structures","status":"passed","title":"should count IR nodes correctly in nested structures","duration":1.2477910000000065,"failureMessages":[],"meta":{}}],"startTime":1751453643301,"endTime":1751453643324.2478,"status":"passed","message":"","name":"/Users/wao_singapore/python2igsce/tests/nested-structures.test.ts"},{"assertionResults":[{"ancestorTitles":["Object-Oriented Programming (OOP) Tests","CLASS Definition"],"fullName":"Object-Oriented Programming (OOP) Tests CLASS Definition should convert a simple Python class to IGCSE CLASS definition","status":"failed","title":"should convert a simple Python class to IGCSE CLASS definition","duration":22.46983299999988,"failureMessages":["AssertionError: expected 'TYPE AnimalRecord\\n   DECLARE name : …' to contain 'CLASS Animal'\n    at /Users/wao_singapore/python2igsce/tests/oop.test.ts:34:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Object-Oriented Programming (OOP) Tests","CLASS Definition"],"fullName":"Object-Oriented Programming (OOP) Tests CLASS Definition should handle class attributes (variables)","status":"failed","title":"should handle class attributes (variables)","duration":5.974874999999884,"failureMessages":["AssertionError: expected 'TYPE CircleRecord\\n   DECLARE name : …' to contain 'CLASS Circle'\n    at /Users/wao_singapore/python2igsce/tests/oop.test.ts:50:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Object-Oriented Programming (OOP) Tests","INHERITANCE"],"fullName":"Object-Oriented Programming (OOP) Tests INHERITANCE should convert a class inheriting from another class","status":"failed","title":"should convert a class inheriting from another class","duration":2.8258749999999964,"failureMessages":["AssertionError: expected 'TYPE AnimalRecord\\n   DECLARE name : …' to contain 'CLASS Animal'\n    at /Users/wao_singapore/python2igsce/tests/oop.test.ts:70:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Object-Oriented Programming (OOP) Tests","INHERITANCE"],"fullName":"Object-Oriented Programming (OOP) Tests INHERITANCE should handle calling superclass constructor (super().__init__)","status":"failed","title":"should handle calling superclass constructor (super().__init__)","duration":2.0872079999999187,"failureMessages":["AssertionError: expected 'TYPE ParentRecord\\n   DECLARE name : …' to contain 'CLASS Parent'\n    at /Users/wao_singapore/python2igsce/tests/oop.test.ts:88:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Object-Oriented Programming (OOP) Tests","Instantiation (NEW)"],"fullName":"Object-Oriented Programming (OOP) Tests Instantiation (NEW) should convert Python object instantiation to IGCSE NEW keyword","status":"failed","title":"should convert Python object instantiation to IGCSE NEW keyword","duration":28.132041999999956,"failureMessages":["AssertionError: expected 'TYPE GreeterRecord\\n   DECLARE name :…' to contain 'CLASS Greeter'\n    at /Users/wao_singapore/python2igsce/tests/oop.test.ts:108:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Object-Oriented Programming (OOP) Tests","Method Calls"],"fullName":"Object-Oriented Programming (OOP) Tests Method Calls should convert Python method calls to IGCSE method calls","status":"failed","title":"should convert Python method calls to IGCSE method calls","duration":7.975957999999991,"failureMessages":["AssertionError: expected '// Assume Greeter class and my_greete…' to contain 'CLASS Greeter'\n    at /Users/wao_singapore/python2igsce/tests/oop.test.ts:128:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Object-Oriented Programming (OOP) Tests","Method Calls"],"fullName":"Object-Oriented Programming (OOP) Tests Method Calls should convert method calls that return values","status":"failed","title":"should convert method calls that return values","duration":1.8953329999999369,"failureMessages":["AssertionError: expected 'TYPE CalculatorRecord\\n   DECLARE nam…' to contain 'CLASS Calculator'\n    at /Users/wao_singapore/python2igsce/tests/oop.test.ts:141:27\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///Users/wao_singapore/python2igsce/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}}],"startTime":1751453642620,"endTime":1751453642691.8953,"status":"failed","message":"","name":"/Users/wao_singapore/python2igsce/tests/oop.test.ts"},{"assertionResults":[{"ancestorTitles":["Syntax Tests - Basic Constructs","Assignment Statements"],"fullName":"Syntax Tests - Basic Constructs Assignment Statements should convert simple integer assignment","status":"passed","title":"should convert simple integer assignment","duration":11.050375000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Assignment Statements"],"fullName":"Syntax Tests - Basic Constructs Assignment Statements should convert simple string assignment","status":"passed","title":"should convert simple string assignment","duration":5.951665999999932,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Assignment Statements"],"fullName":"Syntax Tests - Basic Constructs Assignment Statements should convert assignment with expression","status":"passed","title":"should convert assignment with expression","duration":5.046499999999924,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Output Statements"],"fullName":"Syntax Tests - Basic Constructs Output Statements should convert print with a variable","status":"passed","title":"should convert print with a variable","duration":3.4069170000000213,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Output Statements"],"fullName":"Syntax Tests - Basic Constructs Output Statements should convert print with a string literal","status":"passed","title":"should convert print with a string literal","duration":0.6627919999998539,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Output Statements"],"fullName":"Syntax Tests - Basic Constructs Output Statements should convert print with multiple arguments","status":"passed","title":"should convert print with multiple arguments","duration":0.5383749999998599,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Input Statements"],"fullName":"Syntax Tests - Basic Constructs Input Statements should convert simple input to a variable","status":"passed","title":"should convert simple input to a variable","duration":0.5742079999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Input Statements"],"fullName":"Syntax Tests - Basic Constructs Input Statements should convert input with a prompt","status":"passed","title":"should convert input with a prompt","duration":0.6508329999999205,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Comments"],"fullName":"Syntax Tests - Basic Constructs Comments should convert single-line comments","status":"passed","title":"should convert single-line comments","duration":1.5008749999999509,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Comments"],"fullName":"Syntax Tests - Basic Constructs Comments should place comments correctly relative to code","status":"passed","title":"should place comments correctly relative to code","duration":6.662833999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Operators"],"fullName":"Syntax Tests - Basic Constructs Operators should handle arithmetic operators","status":"passed","title":"should handle arithmetic operators","duration":1.8775000000000546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Operators"],"fullName":"Syntax Tests - Basic Constructs Operators should handle MOD operator","status":"passed","title":"should handle MOD operator","duration":0.9720409999999902,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Operators"],"fullName":"Syntax Tests - Basic Constructs Operators should handle DIV operator (integer division)","status":"passed","title":"should handle DIV operator (integer division)","duration":1.6564999999998236,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Operators"],"fullName":"Syntax Tests - Basic Constructs Operators should handle comparison operators","status":"passed","title":"should handle comparison operators","duration":2.5842499999998836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Operators"],"fullName":"Syntax Tests - Basic Constructs Operators should handle logical operators AND, OR, NOT","status":"passed","title":"should handle logical operators AND, OR, NOT","duration":0.7863330000000133,"failureMessages":[],"meta":{}},{"ancestorTitles":["Syntax Tests - Basic Constructs","Operators"],"fullName":"Syntax Tests - Basic Constructs Operators should handle string concatenation","status":"passed","title":"should handle string concatenation","duration":0.5683340000000499,"failureMessages":[],"meta":{}}],"startTime":1751453642616,"endTime":1751453642661.5684,"status":"passed","message":"","name":"/Users/wao_singapore/python2igsce/tests/syntax.test.ts"},{"assertionResults":[{"ancestorTitles":["TypeScript Type Definitions","IR Type Definition"],"fullName":"TypeScript Type Definitions IR Type Definition should define IR interface correctly","status":"passed","title":"should define IR interface correctly","duration":3.2813340000000153,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","IR Type Definition"],"fullName":"TypeScript Type Definitions IR Type Definition should support optional meta properties","status":"passed","title":"should support optional meta properties","duration":0.330332999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","IGCSE Type Definitions"],"fullName":"TypeScript Type Definitions IGCSE Type Definitions should define data types correctly","status":"passed","title":"should define data types correctly","duration":0.528458999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","IGCSE Type Definitions"],"fullName":"TypeScript Type Definitions IGCSE Type Definitions should define operators correctly","status":"passed","title":"should define operators correctly","duration":0.4061659999999847,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","IGCSE Type Definitions"],"fullName":"TypeScript Type Definitions IGCSE Type Definitions should define keywords correctly","status":"passed","title":"should define keywords correctly","duration":0.44020899999998164,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","Parser Type Definitions"],"fullName":"TypeScript Type Definitions Parser Type Definitions should define parser options correctly","status":"passed","title":"should define parser options correctly","duration":0.2143750000000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","Parser Type Definitions"],"fullName":"TypeScript Type Definitions Parser Type Definitions should define parse result correctly","status":"passed","title":"should define parse result correctly","duration":0.17104199999994307,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","Emitter Type Definitions"],"fullName":"TypeScript Type Definitions Emitter Type Definitions should define emitter options correctly","status":"passed","title":"should define emitter options correctly","duration":0.2897500000000264,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","Emitter Type Definitions"],"fullName":"TypeScript Type Definitions Emitter Type Definitions should define emit result correctly","status":"passed","title":"should define emit result correctly","duration":0.32570799999996325,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","Utility Type Definitions"],"fullName":"TypeScript Type Definitions Utility Type Definitions should define position and location correctly","status":"passed","title":"should define position and location correctly","duration":0.3099169999999276,"failureMessages":[],"meta":{}},{"ancestorTitles":["TypeScript Type Definitions","Utility Type Definitions"],"fullName":"TypeScript Type Definitions Utility Type Definitions should define visitor pattern correctly","status":"passed","title":"should define visitor pattern correctly","duration":0.13475000000005366,"failureMessages":[],"meta":{}}],"startTime":1751453643229,"endTime":1751453643236.3098,"status":"passed","message":"","name":"/Users/wao_singapore/python2igsce/tests/types.test.ts"}]}